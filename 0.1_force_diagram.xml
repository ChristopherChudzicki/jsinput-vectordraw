<problem display_name="webGLDemo">
<script type="loncapa/python">
<![CDATA[
import json
def vglcfn(e, ans):
  '''
  Grading a force diagram.
  '''
  class Vector(object):
      def __init__(self,name,length,angle,tail):
          self.name = name
          self.length = length
          self.angle = angle
          self.tail = tail
          return None

  class gradeVector:
      def __init__(self):
          return None

      def compareLengths(self,v1,v2):
          if abs(v1.length-v2.length) < 1.00:
              return True
          else:
              return False

      def checkAngle(self,v1,GIVEN,**kwargs):
          tol = kwargs.get('tol', 1.0)
          if abs(v1.angle - GIVEN) < tol:
              return True
          else:
              return False
      
      def checkCenterMass(self, cm, vectors, **kwargs):
          tol = kwargs.get('tol', 0.25)
          numFalse = []
          for v in vectors:
              dist = math.hypot(cm[0] - v.tail[0], cm[1] - v.tail[1])
              if dist > tol:
                  numFalse.append([v.name,dist])
        
          if len(numFalse) == 0:
              return True
          else:
              return False


  answer = json.loads(json.loads(ans)['answer'])
  cm = answer['cm']['p1']
  if 'N' in answer and 'g' in answer and 'f' in answer:
      vN = Vector(answer['N']['name'],answer['N']['length'],answer['N']['angle'],answer['N']['tail'])
      vg = Vector(answer['g']['name'],answer['g']['length'],answer['g']['angle'],answer['g']['tail'])
      vf = Vector(answer['f']['name'],answer['f']['length'],answer['f']['angle'],answer['f']['tail'])
  else:  
      return {'ok': False, 'msg': 'You need to use all three vectors.'}

  if gradeVector().compareLengths(vN, vg) == False:
      return {'ok': False, 'msg': 'Normal Force and Gravitational Force should be similar lengths.'}

  if gradeVector().checkAngle(vN, 90.0, tol=2.0) == False:
      return {'ok': False, 'msg': 'The angle of the Normal Force is incorrect. Your angle: %.1f' % vN.angle}

  if gradeVector().checkAngle(vg, 270.0, tol=2.0) == False:
      return {'ok': False, 'msg': 'The angle of the Gravitational Force is incorrect. Your angle: %.1f' % vg.angle}

  if gradeVector().checkAngle(vf, 180.0, tol=2.0) == False:
      return {'ok': False, 'msg': 'The angle of the Frictional Force is incorrect. Your angle: %.1f' % vf.angle}

  if gradeVector().checkCenterMass(cm,[vN,vg],tol=0.25) == False:
      return {'ok': False, 'msg': 'One or more of your vectors do not start from the center of mass.'}

  return {'ok': True, 'msg': 'Good job!'}

]]>
</script>
<p>
A car is moving in the positive x-direction and is slowing down. Draw the appropriate free-body diagram for this situation. You can create a draggable vector by clicking one of the buttons to the right of the interactive canvas.  
</p>
<p>
  <i>Be sure that the "tail" of each vector starts at the center of mass.</i> Also try to break this - I have error messages for most possible situations.
</p>
<customresponse cfn="vglcfn">
  <jsinput gradefn="getInput"
    get_statefn="getState"
    set_statefn="setState"
    initial_state='{}'
    width="750"
    height="450"
    html_file="/static/0.1_force_diagram.html"
    />
</customresponse>
</problem>
